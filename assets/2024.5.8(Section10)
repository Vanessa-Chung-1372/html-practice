Grid Sizing
Fractional Size
<!--practice -->
.container{
    display: grid;
    grid-template-rows: 1fr 2fr; /*欄寬和列寬 */
    grid-template-columns: 1fr 1fr;
}
    does not responsive to the screen size. It is fixed.
    combine them:
Fixed Size
    grid-template: 100px 200px / 400px 800px;
 Auto Size
a responsive way:  add “auto”，the 2rd columns will fill to 100% column space, and the 2rd row is just going to fit the content.
grid-template-rows: 100px auto;
grid-template-columns: 100px auto;
MinMax Size
set min and max
grid-template-rows: 200px 400px;
grid-template-columns: 200px minmax(400px, 800px)
Repeat  x*x個spuare，repeat(x, size)
grid-template-rows: repeat(2,200px);
grid-template-columns: repeat(2,100px);
When there is extra…
grid-template-rows: 100px 100px;
grid-template-columns: 100px 100px;
grid-auto-rows: 300px;


grid(lines, tracks, cells, container ,items)
grid size

TRACKS:
Grid cell: sit between rows and columns
Grid lines (gaps)
Grid-column-start: 2;
Grid-column-end: -1; (從最後開始算)

兩種方式更改位置: 使用order或是 grid area
Grid-column: span 2;
Grid-column-end: -1; (從最後開始算)
Order:1; //be the bottom most/ right most in that grid, because the default is “0”.

Specify the location:
Grid-area: 2 / 1/ 3/ 3 ; //(row start, column start, row end, column end)

Grid can overlay items!!! When there is transparency, we can see the overlaps.



